@page "/profilis"
@using BlazorServer.Authentication
@using BlazorServer.Models
@inject UserAccountService userAccountService
@inject Blazored.SessionStorage.ISessionStorageService _currentSession
@inject IJSRuntime js
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

@using DataLibrary
@inject IDataAccess _data
@inject IConfiguration _config


@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using System.Security.Claims;

<PageTitle>Mano Profilis</PageTitle>
<h1>Mano Profilis</h1>

@if (user == null || people == null)
{
    <p>Loading...</p>
}
else {
<p>Vardas Pavarde: <b>@people[0].vardas @people[0].pavarde</b></p>
<p>El. Paštas: <b>@people[0].elPastas</b></p>
<p>Miestas: <b>@people[0].miestas</b></p>
<p>Pašto kodas: <b>@people[0].pastoKodas</b></p>
<p>Adresas: <b>@people[0].adresas</b></p>
<p>Slaptažodis: <b>@people[0].slaptazodis</b></p>
<p>Lytis: <b>@people[0].lytis</b></p>
<p><i>Rolė: @user.Role</i></p>


}

<a class="btn btn-primary" href="profilio_redagavimas" role="button">Redaguoti profili</a>
<br />
<a class="btn btn-danger" href="#" role="button">Pašalinti paskyrą</a>
<a class="btn btn-primary" role="button" @onclick="GetSessionUser">Matyti duomenis</a>

@code
{
    public UserAccount user = new UserAccount();
    public List<Naudotojas> people;

    protected override async Task OnInitializedAsync()
    {
           await GetSessionUser();   
           string sql = "select * from naudotojai where slapyvardis = @slapyvardis AND slaptazodis = @slaptazodis limit 1";

            people = await _data.LoadData<Naudotojas, dynamic>(sql, new { slapyvardis = user.UserName, slaptazodis = user.Password}, _config.GetConnectionString("default"));
    }


    public async Task GetSessionUser()
    {
        user = await _currentSession.GetItemAsync<UserAccount>("SessionUser");
    }

    public void ClearSession()
    {
        _currentSession.ClearAsync();
        user = new UserAccount();
    }
}
